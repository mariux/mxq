


DROP TABLE mxq_group;
CREATE TABLE IF NOT EXISTS mxq_group (
   group_id       INT8 UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
   group_name     VARCHAR(511)  NOT NULL DEFAULT 'default',
   group_status   INT1 UNSIGNED NOT NULL DEFAULT 0,
   group_priority INT2 UNSIGNED NOT NULL DEFAULT 127,

   user_uid        INT4 UNSIGNED   NOT NULL,
   user_name       VARCHAR(255)    NOT NULL,
   user_gid        INT4 UNSIGNED   NOT NULL,
   user_group      VARCHAR(255)    NOT NULL,

   job_command    VARCHAR(4095)   NOT NULL,

   job_threads    INT2 UNSIGNED NOT NULL DEFAULT 1,
   job_memory     INT8 UNSIGNED NOT NULL DEFAULT 1024,
   job_time       INT4 UNSIGNED NOT NULL DEFAULT 15,

   group_jobs          INT8 UNSIGNED NOT NULL DEFAULT 0,
   group_jobs_running  INT8 UNSIGNED NOT NULL DEFAULT 0,
   group_jobs_finished INT8 UNSIGNED NOT NULL DEFAULT 0,
   group_jobs_failed   INT8 UNSIGNED NOT NULL DEFAULT 0,

   group_slots_running INT8 UNSIGNED NOT NULL DEFAULT 0,

   group_mtime TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,

   stats_max_maxrss   INT4 NOT NULL DEFAULT 0,

   stats_max_utime_sec  INT4 UNSIGNED NOT NULL DEFAULT 0,
   stats_max_stime_sec  INT4 UNSIGNED NOT NULL DEFAULT 0,
   stats_max_real_sec   INT4 UNSIGNED NOT NULL DEFAULT 0,

   INDEX(group_id),
   INDEX(group_name)
);

DROP TABLE mxq_job;
CREATE TABLE IF NOT EXISTS mxq_job (
   job_id         INT8 UNSIGNED   NOT NULL PRIMARY KEY AUTO_INCREMENT,
   job_status     INT1 UNSIGNED   NOT NULL DEFAULT 0,
   job_priority   INT2 UNSIGNED   NOT NULL DEFAULT 127,

   group_id       INT8 UNSIGNED   NOT NULL,

   job_workdir    VARCHAR(4095)   NOT NULL,
   job_argc       INT2 UNSIGNED   NOT NULL,
   job_argv       VARCHAR(40959)  NOT NULL,

   job_stdout     VARCHAR(4095)   NOT NULL DEFAULT '/dev/null',
   job_stderr     VARCHAR(4095)   NOT NULL DEFAULT '/dev/null',

   job_umask      INT4            NOT NULL,

   host_submit    VARCHAR(64)     NOT NULL DEFAULT "localhost",

   server_id      VARCHAR(1023)   NOT NULL DEFAULT "",

   host_hostname  VARCHAR(64)     NOT NULL DEFAULT "",
   host_pid       INT4 UNSIGNED   NOT NULL DEFAULT 0,
   host_slots     INT4 UNSIGNED   NOT NULL DEFAULT 0,

   date_submit  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
   date_start   TIMESTAMP NOT NULL DEFAULT 0,
   date_end     TIMESTAMP NOT NULL DEFAULT 0,

   stats_status   INT4 UNSIGNED NOT NULL DEFAULT 0,

   stats_utime_sec  INT4 UNSIGNED NOT NULL DEFAULT 0,
   stats_utime_usec INT4 UNSIGNED NOT NULL DEFAULT 0,
   stats_stime_sec  INT4 UNSIGNED NOT NULL DEFAULT 0,
   stats_stime_usec INT4 UNSIGNED NOT NULL DEFAULT 0,
   stats_real_sec   INT4 UNSIGNED NOT NULL DEFAULT 0,
   stats_real_usec  INT4 UNSIGNED NOT NULL DEFAULT 0,

   stats_maxrss   INT4 NOT NULL DEFAULT 0,
   stats_minflt   INT4 NOT NULL DEFAULT 0,
   stats_majflt   INT4 NOT NULL DEFAULT 0,
   stats_nswap    INT4 NOT NULL DEFAULT 0,
   stats_inblock  INT4 NOT NULL DEFAULT 0,
   stats_oublock  INT4 NOT NULL DEFAULT 0,
   stats_nvcsw    INT4 NOT NULL DEFAULT 0,
   stats_nivcsw   INT4 NOT NULL DEFAULT 0,

   INDEX (job_id),
   INDEX (job_status),
   INDEX (job_priority),
   INDEX (host_hostname(64)),
   INDEX (server_id(767))
);

DELIMITER |
DROP TRIGGER mxq_update_job|
CREATE TRIGGER mxq_update_job BEFORE UPDATE ON mxq_job
    FOR EACH ROW BEGIN
        IF NEW.job_status = 20 AND OLD.job_status IN (0, 10, 15)  THEN
            UPDATE mxq_group SET 
               group_jobs_running=group_jobs_running+1, 
               group_mtime=NULL 
            WHERE group_id=NEW.group_id;
        ELSEIF NEW.job_status IN (40, 45) AND OLD.job_status IN (20, 25, 30, 35) THEN
            UPDATE mxq_group SET
               group_jobs_running=group_jobs_running-1,
               group_jobs_failed=group_jobs_failed+1,
               stats_max_maxrss=GREATEST(stats_max_maxrss, NEW.stats_maxrss),
               stats_max_utime_sec=GREATEST(stats_max_utime_sec, NEW.stats_utime_sec),
               stats_max_stime_sec=GREATEST(stats_max_stime_sec, NEW.stats_stime_sec),
               stats_max_real_sec=GREATEST(stats_max_real_sec, NEW.stats_real_sec),
               group_mtime=NULL
            WHERE group_id=NEW.group_id;
        ELSEIF NEW.job_status = 50 AND OLD.job_status IN (20, 25, 30, 35) THEN
            UPDATE mxq_group SET
               group_jobs_running=group_jobs_running-1,
               group_jobs_finished=group_jobs_finished+1,
               stats_max_maxrss=GREATEST(stats_max_maxrss, NEW.stats_maxrss),
               stats_max_utime_sec=GREATEST(stats_max_utime_sec, NEW.stats_utime_sec),
               stats_max_stime_sec=GREATEST(stats_max_stime_sec, NEW.stats_stime_sec),
               stats_max_real_sec=GREATEST(stats_max_real_sec, NEW.stats_real_sec),
               group_mtime=NULL
            WHERE group_id=NEW.group_id;
        ELSE
            UPDATE mxq_group SET
               stats_max_maxrss=GREATEST(stats_max_maxrss, NEW.stats_maxrss),
               stats_max_utime_sec=GREATEST(stats_max_utime_sec, NEW.stats_utime_sec),
               stats_max_stime_sec=GREATEST(stats_max_stime_sec, NEW.stats_stime_sec),
               stats_max_real_sec=GREATEST(stats_max_real_sec, NEW.stats_real_sec),
               group_mtime=NULL
            WHERE group_id=NEW.group_id;
        END IF;
    END;
|
DROP TRIGGER mxq_add_job|
CREATE TRIGGER mxq_add_job AFTER INSERT ON mxq_job
    FOR EACH ROW BEGIN
        UPDATE mxq_group SET 
            group_jobs=group_jobs+1,
            group_mtime=NULL 
        WHERE group_id=NEW.group_id;
    END;
|
DELIMITER ;


DROP TABLE mxq_server;
CREATE TABLE IF NOT EXISTS mxq_server (
   host_id          INT4 UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
   host_hostname    VARCHAR(511)  NOT NULL DEFAULT 'localhost',

   server_id        VARCHAR(511)  NOT NULL DEFAULT 'default',

   host_slots       INT2 UNSIGNED NOT NULL DEFAULT 1,
   host_memory      INT8 UNSIGNED NOT NULL DEFAULT 1024,
   host_time        INT4 UNSIGNED NOT NULL DEFAULT 15,

   host_jobs_running    INT2 UNSIGNED NOT NULL DEFAULT 0,
   host_slots_running   INT2 UNSIGNED NOT NULL DEFAULT 0,

   host_mtime       TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

   server_start     TIMESTAMP DEFAULT 0,
   server_stop      TIMESTAMP DEFAULT 0,


);

DROP TABLE job;

CREATE TABLE IF NOT EXISTS job (
   job_id         INT8 UNSIGNED   NOT NULL PRIMARY KEY AUTO_INCREMENT,
   job_status     INT1 UNSIGNED   NOT NULL DEFAULT 0,
   job_priority   INT2 UNSIGNED   NOT NULL DEFAULT 127,

   group_id       VARCHAR(511)    NOT NULL DEFAULT 'default',
   group_status   INT1 UNSIGNED   NOT NULL DEFAULT 0,
   group_priority INT2 UNSIGNED   NOT NULL DEFAULT 127,

   user_uid        INT4 UNSIGNED   NOT NULL,
   user_name       VARCHAR(255)    NOT NULL,
   user_gid        INT4 UNSIGNED   NOT NULL,
   user_group      VARCHAR(255)    NOT NULL,

   job_threads    INT2 UNSIGNED   NOT NULL DEFAULT 1,
   job_memory     INT8 UNSIGNED   NOT NULL DEFAULT 1024,
   job_time       INT4 UNSIGNED   NOT NULL DEFAULT 15,

   job_workdir    VARCHAR(4095)   NOT NULL,
   job_command    VARCHAR(4095)   NOT NULL,
   job_argc       INT2 UNSIGNED   NOT NULL,
   job_argv       VARCHAR(40959)  NOT NULL,

   job_stdout     VARCHAR(4095)   NOT NULL DEFAULT '/dev/null',
   job_stderr     VARCHAR(4095)   NOT NULL DEFAULT '/dev/null',

   job_umask      INT4            NOT NULL,

   host_submit    VARCHAR(1023)   NOT NULL,

   server_id      VARCHAR(1023)   DEFAULT NULL,

   host_hostname  VARCHAR(1023)   DEFAULT NULL,
   host_pid       INT4 UNSIGNED   DEFAULT NULL,

   date_submit  TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
   date_start   TIMESTAMP DEFAULT 0,
   date_end     TIMESTAMP DEFAULT 0,

   stats_status   INT4 UNSIGNED DEFAULT NULL,

   stats_utime    DECIMAL(12,6) DEFAULT NULL,
   stats_stime    DECIMAL(12,6) DEFAULT NULL,
   stats_real     DECIMAL(12,6) DEFAULT NULL,

   stats_maxrss   INT4 NOT NULL DEFAULT 0,
   stats_minflt   INT4 NOT NULL DEFAULT 0,
   stats_majflt   INT4 NOT NULL DEFAULT 0,
   stats_nswap    INT4 NOT NULL DEFAULT 0,
   stats_inblock  INT4 NOT NULL DEFAULT 0,
   stats_oublock  INT4 NOT NULL DEFAULT 0,
   stats_nvcsw    INT4 NOT NULL DEFAULT 0,
   stats_nivcsw   INT4 NOT NULL DEFAULT 0,

   INDEX (job_id),
   INDEX (group_id),
   INDEX (group_priority),
   INDEX (job_status),
   INDEX (job_threads),
   INDEX (job_memory),
   INDEX (job_time),
   INDEX (job_priority),
   INDEX (user_uid),
   INDEX (host_hostname(767)),
   INDEX (job_command(767)),
   INDEX (server_id(767))
);

INSERT INTO job SET user_uid=1,user_name='user1',user_gid=1,user_group='group1',job_command="sleep", job_argc=1, job_argv='sleep\\0', job_workdir='/tmp',job_umask=0,host_submit='localhost';

INSERT INTO job SET user_uid=1,user_name='user1',user_gid=1,user_group='group1',
                    job_memory=4096, job_threads=2, job_time=60,
                    job_command="sleep", job_argc=1, job_argv='sleep\\0', job_workdir='/tmp',job_umask=0,
                    host_submit='localhost';

INSERT INTO job SET user_uid=1,user_name='user1',user_gid=1,user_group='group1',
                    group_id='test',
                    job_memory=4096, job_threads=2, job_time=60,
                    job_command="sleep", job_argc=1, job_argv='sleep\\0', job_workdir='/tmp',job_umask=0,
                    host_submit='localhost';

INSERT INTO job SET user_uid=1,user_name='user1',user_gid=1,user_group='group1',
                    group_id='test',
                    job_memory=4096*10, job_threads=7, job_time=60,
                    job_command="sleep", job_argc=1, job_argv='sleep\\0', job_workdir='/tmp',job_umask=0,
                    host_submit='localhost';

INSERT INTO job SET user_uid=1,user_name='user1',user_gid=1,user_group='group1',
                    group_id='test',
                    job_memory=4096*10*7, job_threads=7, job_time=60,
                    job_command="sleep", job_argc=1, job_argv='sleep\\0', job_workdir='/tmp',job_umask=0,
                    host_submit='localhost';

DROP VIEW v_job_status;
CREATE VIEW v_job_status AS
SELECT user_uid, group_id, group_priority, job_priority, job_memory, job_threads, job_time, job_command, COUNT(*) AS sum,
        SUM(CASE WHEN job_status = 0 THEN 1 ELSE 0 END) AS status0, 
        SUM(CASE WHEN job_status = 1 THEN 1 ELSE 0 END) AS status1,
        SUM(CASE WHEN job_status = 2 THEN 1 ELSE 0 END) AS status2,
        SUM(CASE WHEN job_status = 3 THEN 1 ELSE 0 END) AS status3,
	MAX(stats_utime),
	AVG(stats_utime),
	MAX(stats_stime),
	AVG(stats_stime),
	MAX(stats_real),
	AVG(stats_real),
	MIN(date_submit) AS date_submit_min,
	MIN(CASE WHEN date_start > 0 THEN date_start END) AS date_start_min,
	MAX(date_end) AS date_end_max
FROM 
    job
GROUP BY
    user_uid,
    group_id,
    job_memory,
    group_priority,
    job_priority,
    job_threads,
    job_time,
    job_command;


DROP VIEW v_job_status;
CREATE VIEW v_job_status AS
SELECT user_uid, group_id, group_priority, job_priority, job_memory, job_threads, job_time, job_command, host_hostname, COUNT(*) AS sum,
        SUM(CASE WHEN job_status = 0 THEN 1 ELSE 0 END) AS status0, 
        SUM(CASE WHEN job_status = 1 THEN 1 ELSE 0 END) AS status1,
        SUM(CASE WHEN job_status = 2 THEN 1 ELSE 0 END) AS status2,
        SUM(CASE WHEN job_status = 3 THEN 1 ELSE 0 END) AS status3,
        SUM(CASE WHEN job_status >= 4 THEN 1 ELSE 0 END) AS status4plus,
	MAX(stats_utime),
	AVG(stats_utime),
	MAX(stats_stime),
	AVG(stats_stime),
	MAX(stats_real),
	AVG(stats_real)
FROM 
    job
GROUP BY
    user_uid,
    group_id,
    job_memory,
    group_priority,
    job_priority,
    job_threads,
    job_time,
    job_command, host_hostname;


SELECT user_uid, group_id, group_priority, job_priority, job_memory, job_threads, job_time, COUNT(*) AS sum,
         SUM(CASE WHEN job_status = 0 THEN 1 ELSE 0 END) AS status0, 
         SUM(CASE WHEN job_status = 1 THEN 1 ELSE 0 END) AS status1,
         SUM(CASE WHEN job_status = 2 THEN 1 ELSE 0 END) AS status2,
         SUM(CASE WHEN job_status = 3 THEN 1 ELSE 0 END) AS status3,

         (job_memory*80)/(job_threads*1024*1024),
         
         POW(1024*1024,2)*POW(job_threads,2) / (POW(job_memory,2)*80) AS max_slots_total,

         LEAST(80,FLOOR(FLOOR((POW(1024*1024,2)*POW(job_threads,2)) / (POW(job_memory,2)*80) + 0.5) / job_threads) * job_threads) AS max_slots_host,

         LEAST(FLOOR(80/job_threads)*job_threads ,FLOOR(FLOOR((POW(1024*1024,2)*POW(job_threads,2)) / (POW(job_memory,2)*80) + 0.5) / job_threads) * job_threads) AS max_slots_real,

         LEAST(FLOOR(80/job_threads) ,FLOOR(FLOOR((POW(1024*1024,2)*POW(job_threads,2)) / (POW(job_memory,2)*80) + 0.5) / job_threads)) AS max_jobs_real,
         
         MIN(date_submit),
	 MIN(date_start),
	 MAX(date_end)
         from job GROUP BY user_uid,group_id,job_memory,group_priority,job_priority,job_threads,job_time;


drop view v_job_overview;
create view v_job_overview as
select 
    user_name,
    group_id,
    job_command,
    CASE WHEN stats_status THEN stats_status ELSE 0 END AS exit_status,
    CEIL(MAX(stats_maxrss/1024)) as max_stats_maxrss_mib,
    CEIL(SUM(CASE WHEN date_start and job_status < 4 THEN CASE WHEN stats_real THEN stats_real ELSE TIMESTAMPDIFF(SECOND, date_start, NOW()) END END)) AS total_runtime_seconds,
    CEIL(TIMESTAMPDIFF(SECOND, MIN(CASE WHEN date_start THEN date_start END), MAX(CASE WHEN date_end THEN date_end ELSE CASE WHEN date_start THEN NOW() END END))) AS total_real_seconds,
    COUNT(job_id) as total_jobs,
    COUNT(CASE WHEN job_status < 2 THEN job_status END) AS total_jobs_in_q,
    COUNT(CASE WHEN job_status = 2 THEN job_status END) AS total_jobs_runnning,
    COUNT(CASE WHEN job_status > 2 THEN job_status END) AS total_jobs_done
from
    job 
group by 
    user_uid,
    job_command,
    job_memory,
    job_threads,
    job_time,
    CASE WHEN stats_status THEN stats_status ELSE 0 END,
    group_priority,
    group_id;



CREATE TABLE IF NOT EXISTS servers (
   host_hostname  VARCHAR(1023)   DEFAULT NULL,
   server_id      VARCHAR(1023)   DEFAULT NULL,
   
   server_status  INT1 UNSIGNED   NOT NULL DEFAULT 0,

   host_threads   INT2 UNSIGNED   NOT NULL DEFAULT 1,
   host_memory    INT8 UNSIGNED   NOT NULL DEFAULT 1024,
   host_time      INT4 UNSIGNED   NOT NULL DEFAULT 15,
   
   UNIQUE (host_hostname(767), server_id(767)),
   INDEX  (server_status),
   INDEX  (host_threads),
   INDEX  (host_memory),
   INDEX  (host_time)
);


insert into servers values('testhost1', 'testserver1', 1, 40,  2048, 15);
insert into servers values('testhost1', 'testserver2', 1, 40, 20480, 60);
insert into servers values('testhost2', 'testserver3', 1, 80,  2048, 45);


drop view v_job_schedule;
create view v_job_schedule as
select 
    user_name,
    group_id,
    job_command,
    job_threads,
    job_memory,
    job_time,
    CEIL(MAX(stats_maxrss/1024)) as max_stats_maxrss_mib,
    CEIL(TIMESTAMPDIFF(SECOND, MIN(CASE WHEN date_start THEN date_start END), MAX(CASE WHEN date_end THEN date_end ELSE CASE WHEN date_start THEN NOW() END END))/60) AS total_real_minutes,
    COUNT(CASE WHEN job_status = 0 THEN job_status END) AS total_jobs_waiting,
    COUNT(CASE WHEN job_status = 2 OR job_status = 1 THEN job_status END) AS total_jobs_active
from
    job
group by 
    job_command,
    user_uid,
    job_memory,
    job_threads,
    job_time,
    CASE WHEN stats_status THEN stats_status ELSE 0 END,
    group_priority,
    group_id;


